name: "OneConnect Build and Restore"
description: "Building and restoring ..."
inputs:
  ghp-username:
    description: 'Username'
    required: true

  ghp-password:
    description: 'Password'
    required: true

  solution-name:
    description: 'Solution name'
    required: true

  dotnet-version:
    description: 'DotNet Version'
    required: true

  initialise-sonar-cloud:
    description: 'Initialise SonarCloud'
    required: true

  sonarcloud-project-id:
    description: 'SonarCloud Project Id'
    required: false

  sonarcloud-token:
    description: 'SonarCloud Token'
    required: false

  github-token:
    description: 'Github Token'
    required: false


runs:
  using: "composite"
  steps:
  - name: Checkout repo
    uses: actions/checkout@v2

  - name: Setup .NET Core SDK
    uses: actions/setup-dotnet@v1
    with:
      dotnet-version: ${{ inputs.dotnet-version }}

  - name: Dotnet restore
    env:
      GHP_USERNAME: ${{ inputs.ghp-username }}
      GHP_PASSWORD: ${{ inputs.ghp-password }}
    run: dotnet restore --locked-mode ./${{ inputs.solution-name }}
    shell: bash

  - name: Install SonarCloud scanner
    if: ${{ inputs.initialise-sonar-cloud == true }}
    env:
      GHP_USERNAME: ${{ inputs.ghp-username }}
      GHP_PASSWORD: ${{ inputs.ghp-password }}
    run: dotnet tool install --global dotnet-sonarscanner
    shell: bash

  - name: Initialise SonarScanner
    if: ${{ inputs.initialise-sonar-cloud == true }}
    run: dotnet sonarscanner begin /k:${{ inputs.sonarcloud-project-id }} /o:"awazevr" /d:sonar.exclusions="**/**/Repositories/**" /d:sonar.login="${{ inputs.sonarcloud-token }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/TestResults/*/coverage.opencover.xml"
    shell: run

  - name: Dotnet build
    run: dotnet build -c Release --no-restore ./${{ inputs.solution-name }}
    shell: bash

  - name: Dotnet test
    if: ${{ inputs.initialise-sonar-cloud != true }}
    run: dotnet test -c Release --no-restore ./${{ inputs.solution-name }}
    shell: bash

  - name: Dotnet test with sonarcloud
    if: ${{ inputs.initialise-sonar-cloud == true }}
    run: dotnet test -c Release --no-restore --collect:"XPlat Code Coverage" -l "trx;LogFileName=results.trx" ./${{ inputs.solution-name }} -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    shell: bash

  - name: Package vulnerability check
    if: ${{ inputs.initialise-sonar-cloud == true }}
    env:
      GHP_USERNAME: ${{ inputs.ghp-username }}
      GHP_PASSWORD: ${{ inputs.ghp-password }}
    run: dotnet list package --vulnerable --include-transitive | grep -i -v 'has the following vulnerable packages'
    shell: bash

  - name: End SonarScanner
    if: ${{ inputs.initialise-sonar-cloud == true }}
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    run: dotnet sonarscanner end /d:sonar.login="${{ inputs.sonarcloud-token }}"
    shell: bash

  - name: Publish test report
    uses: dorny/test-reporter@v1
    if: ${{ inputs.initialise-sonar-cloud == true }}
    with:
      name: Test results
      path: ./**/results.trx
      reporter: dotnet-trx

    